"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.makeFetch = void 0;
const fetchSmuggling = async (url, options) => {
    const response = await fetch(url, options);
    // Smuggle the performance clock into the response object.
    Object.defineProperty(response, 'clock', {
        value: options.clock,
        enumerable: true,
    });
    return response;
};
const makeFetch = (_clientOptions) => {
    if (typeof fetch === 'undefined') {
        throw new Error('`fetch` is not defined as a global; Either pass `fetch` to the client, `new Turbopuffer({ fetch })` or polyfill the global, `globalThis.fetch = fetch`');
    }
    // NOTE: not possible to respect client options in this implementation of
    // fetch. Just ignore them.
    //
    // TODO(benesch): would it be better to throw an error?
    return fetchSmuggling;
};
exports.makeFetch = makeFetch;
//# sourceMappingURL=fetch-default.js.map